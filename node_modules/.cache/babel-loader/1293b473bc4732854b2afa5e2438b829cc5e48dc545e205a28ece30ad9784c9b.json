{"ast":null,"code":"// //functional component\n// // function App(){\n// //   const handleClick=()=>{\n// //     alert(\"Hi react!\");\n// //   }\n// //   return(\n// //     <div>\n// //       <h1>Hello world</h1>\n// //       <button onClick={handleClick}>Click me</button>\n// //     </div>\n// //   )\n// // }\n// // export default App;\n\n// //class component\n// // import React, { Component } from \"react\";\n// // class ClassComponent extends Component{\n// //   handleClick=()=>{\n// //     alert(\"Button has clicked\");\n// //   }\n// //   render(){\n// //     return(\n// //       <div>\n// //         <h1>This is helloo from component class</h1>\n// //         <button onClick={this.handleClick}>Click Me!</button>\n// //       </div>\n// //     )\n// //   }\n// // }\n// // export default ClassComponent;\n\n// //class component example with state\n// import React, { Component } from \"react\";\n// class MyClassCom extends Component {\n//   constructor(props) {\n//     super(props);\n//     // Initialize component state\n//     this.state = {\n//       count: 0,\n//     };\n\n//   }\n\n//   handleClick = () => {\n//     // Update the state using setState()\n//     this.setState({\n//       count: this.state.count + 1,\n//     });\n//   };\n\n//   render() {\n//     return (\n//       // Display the current count value\n//       <div>\n//         <p>{this.state.count}</p>\n//         <button onClick={this.handleClick}>Increment</button>\n//       </div>\n//     );\n//   }\n// }\n\n// export default MyClassCom;\n\n// **********JSX*******\n// function ExampleJsx(){\n//   return(\n//RuleNo1 : return single root element\n//we can also use fragments rather than div  ex: <> html code </>\n// <div>  \n//   <h1>hello react</h1>\n//   <img></img>\n// </div>\n\n//Rule2 : close all the tags\n/*<div>\n    <img src=\"\"></img>\n    <br></br>\n    <ul>\n      <li>item 1</li>\n      <li>item 1</li>\n      <li>item 1</li>\n    </ul>\n  </div> */\n\n//rule 3 Camelcase\n//     <button onClick={()=>alert(\"abcde\")} className=\"button\">Click</button>\n//   )\n// }\n//   export default ExampleJsx;\n\n// JSX\n// const Hi=()=>{\n//   return (\n//     <div>\n//       <hi>Hello react!</hi>\n//       <p>This is a componenet using JSx</p>\n//     </div>\n//   );\n// }\n// export default Hi;\n// By using React.createElement\nimport React from \"react\";\nconst testCreateElement = () => {\n  return /*#__PURE__*/React.createElement(\n  // type of element \n  // properties of element\n  // children of element\n  'div', null,\n  // <h1>'Hello React',</h1>\n  'Hello React', /*#__PURE__*/React.createElement('h1', null, 'Welcome to React'), /*#__PURE__*/React.createElement('p', null, 'Welcome to React'));\n};\nexport default testCreateElement;","map":{"version":3,"names":["React","testCreateElement","createElement"],"sources":["C:/Users/akank/Desktop/REACT/second-app/src/App.js"],"sourcesContent":["\n// //functional component\n// // function App(){\n// //   const handleClick=()=>{\n// //     alert(\"Hi react!\");\n// //   }\n// //   return(\n// //     <div>\n// //       <h1>Hello world</h1>\n// //       <button onClick={handleClick}>Click me</button>\n// //     </div>\n// //   )\n// // }\n// // export default App;\n\n// //class component\n// // import React, { Component } from \"react\";\n// // class ClassComponent extends Component{\n// //   handleClick=()=>{\n// //     alert(\"Button has clicked\");\n// //   }\n// //   render(){\n// //     return(\n// //       <div>\n// //         <h1>This is helloo from component class</h1>\n// //         <button onClick={this.handleClick}>Click Me!</button>\n// //       </div>\n// //     )\n// //   }\n// // }\n// // export default ClassComponent;\n\n// //class component example with state\n// import React, { Component } from \"react\";\n// class MyClassCom extends Component {\n//   constructor(props) {\n//     super(props);\n//     // Initialize component state\n//     this.state = {\n//       count: 0,\n//     };\n\n//   }\n\n//   handleClick = () => {\n//     // Update the state using setState()\n//     this.setState({\n//       count: this.state.count + 1,\n//     });\n//   };\n\n//   render() {\n//     return (\n//       // Display the current count value\n//       <div>\n//         <p>{this.state.count}</p>\n//         <button onClick={this.handleClick}>Increment</button>\n//       </div>\n//     );\n//   }\n// }\n\n// export default MyClassCom;\n\n// **********JSX*******\n// function ExampleJsx(){\n//   return(\n    //RuleNo1 : return single root element\n    //we can also use fragments rather than div  ex: <> html code </>\n    // <div>  \n    //   <h1>hello react</h1>\n    //   <img></img>\n    // </div>\n    \n    //Rule2 : close all the tags\n  /*<div>\n      <img src=\"\"></img>\n      <br></br>\n      <ul>\n        <li>item 1</li>\n        <li>item 1</li>\n        <li>item 1</li>\n      </ul>\n    </div> */\n    \n  //rule 3 Camelcase\n//     <button onClick={()=>alert(\"abcde\")} className=\"button\">Click</button>\n//   )\n// }\n//   export default ExampleJsx;\n\n// JSX\n// const Hi=()=>{\n//   return (\n//     <div>\n//       <hi>Hello react!</hi>\n//       <p>This is a componenet using JSx</p>\n//     </div>\n//   );\n// }\n// export default Hi;\n// By using React.createElement\nimport  React from \"react\";\nconst testCreateElement=()=>{\n  return React.createElement(\n// type of element \n  // properties of element\n  // children of element\n  'div',\n  null,\n  // <h1>'Hello React',</h1>\n  'Hello React' ,React.createElement('h1',null,'Welcome to React'),\n  React.createElement('p',null,'Welcome to React')\n  );\n  \n\n  \n}\nexport default testCreateElement;"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;;AAEA;AACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAQA,KAAK,MAAM,OAAO;AAC1B,MAAMC,iBAAiB,GAACA,CAAA,KAAI;EAC1B,oBAAOD,KAAK,CAACE,aAAa;EAC5B;EACE;EACA;EACA,KAAK,EACL,IAAI;EACJ;EACA,aAAa,eAAEF,KAAK,CAACE,aAAa,CAAC,IAAI,EAAC,IAAI,EAAC,kBAAkB,CAAC,eAChEF,KAAK,CAACE,aAAa,CAAC,GAAG,EAAC,IAAI,EAAC,kBAAkB,CAC/C,CAAC;AAIH,CAAC;AACD,eAAeD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}